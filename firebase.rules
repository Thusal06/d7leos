rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }
    function userRole() {
      return isSignedIn() ? get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role : null;
    }
    function isAdmin() { return userRole() == 'admin'; }
    function isTrainer() { return userRole() == 'trainer'; }

    // Users profile (read self or admin; writes restricted: users cannot elevate role or change MyLCI)
    match /users/{userId} {
      allow read: if isSignedIn() && (request.auth.uid == userId || isAdmin());
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow update: if isSignedIn() && (
        // User can update their own profile but not change role or mylci once set
        (request.auth.uid == userId &&
          request.resource.data.role == resource.data.role &&
          request.resource.data.mylci == resource.data.mylci)
        // Admin can update any field
        || isAdmin()
      );
    }

    // Unique MyLCI lock collection (read none, create only)
    match /mylci/{id} {
      allow read: if false;
      allow create: if isSignedIn();
      allow update, delete: if false;
    }

    match /projects/{docId} {
      allow read: if true;
      allow write: if isSignedIn() && (isAdmin() || isTrainer());
    }

    match /council/{docId} {
      allow read: if true;
      allow write: if isSignedIn() && isAdmin();
    }

    match /modules/{docId} {
      allow read: if true;
      allow write: if isSignedIn() && (isAdmin() || isTrainer());
    }

    // Quiz data
    match /quizzes/{quizId} {
      allow read: if true;
      allow write: if isSignedIn() && (isAdmin() || isTrainer());
    }
    match /attempts/{attemptId} {
      allow read, write: if isSignedIn() && request.auth.uid == resource.data.uid;
    }
  }
}

service firebase.storage {
  match /b/{bucket}/o {
    function isSignedIn() { return request.auth != null; }
    match /modules/{allPaths=**} {
      allow read: if true;
      allow write: if isSignedIn();
    }
    match /uploads/{allPaths=**} {
      allow read: if true;
      allow write: if isSignedIn();
    }
  }
}